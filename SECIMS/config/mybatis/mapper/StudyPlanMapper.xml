<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.cuit.secims.mw.dao.IStudyPlanDao">


	<!-- 开启 mybatis 的二级缓存
			eviction: 回收策略 FIFO: 先进先出，默认：缓存会使用Least Recently Used（LRU，最近最少使用的）算法来收回。
			flushInterval： 自动刷新时间
			size： 最多可以缓存引用对象个数 	默认：缓存最多会存储1024个对象
			readOnly：只读模式
	
	<cache 
		eviction="FIFO"   
		flushInterval="60000" 
		size="512" 
		readOnly="true" />  -->


	<!-- ========= 结果集 =========== -->

	<!-- 最基本的 学习计划 -->
	<resultMap type="StudyPlan" id="planBasic">

		<id property="planId" column="planId" />
		<result property="planTitle" column="planTitle" />
		<result property="planType" column="planType" />
		<result property="planContent" column="planContent" />
		<result property="createTime" column="createTime" />
		<result property="finishTime" column="finishTime" />
		<result property="userid" column="userid" />
		<result property="status" column="status" />
		<result property="progress" column="progress" />
		<result property="score" column="score" />

	</resultMap>

	<!-- 带详细计划的学习计划 -->
	<resultMap type="StudyPlan" id="planWithDetails">

		<id property="planId" column="planId" />
		<result property="planTitle" column="planTitle" />
		<result property="planType" column="planType" />
		<result property="planContent" column="planContent" />
		<result property="createTime" column="s_createTime" />
		<result property="finishTime" column="s_finishTime" />
		<result property="userid" column="userid" />
		<result property="status" column="s_status" />
		<result property="progress" column="progress" />
		<result property="score" column="score" />

		<!-- collection 一对多 -->
		<collection property="studyPlanDetails"
			resultMap="com.cuit.secims.mw.dao.IStudyPlanDetailDao.planDetailToHeavy" />

	</resultMap>
	
	
	<!-- 带详细计划的学习计划/用户 -->
	<resultMap type="StudyPlan" id="planWithDetailsAndUser">

		<id property="planId" column="planId" />
		<result property="planTitle" column="planTitle" />
		<result property="planType" column="planType" />
		<result property="planContent" column="planContent" />
		<result property="createTime" column="s_createTime" />
		<result property="finishTime" column="s_finishTime" />
		<result property="userid" column="userid" />
		<result property="status" column="s_status" />
		<result property="progress" column="progress" />
		<result property="score" column="score" />

		<!-- collection 一对多 -->
		<collection property="studyPlanDetails"
			resultMap="com.cuit.secims.mw.dao.IStudyPlanDetailDao.planDetailToHeavy" />

	</resultMap>


	<!-- ====== 具体的一些操作 ======= -->

	<!-- 获取 全部 学习计划 -->
	<select id="getStudyPlans" resultMap="planBasic" parameterType="int">
		<![CDATA[
			SELECT * FROM SECIMS.StudyPlan s WHERE s.userid = #{userid} ORDER BY planId DESC
		]]>
	</select>


	<!-- 批量删除 根据 学习计划IDs collection="集合类型" -->
	<delete id="delStudyPlansByIDs" parameterType="int">
		DELETE FROM SECIMS.StudyPlan WHERE planId in
		<foreach item="id" collection="array" open="(" separator=","
			close=")">
			#{id}
		</foreach>
	</delete>


	<!-- 删除一条计划 通过planID -->
	<delete id="delPlan" parameterType="int">
		<![CDATA[
			DELETE s.*,d.* 
			FROM secims.`studyplan` s LEFT JOIN secims.`studyplandetail`  d 
			ON s.`planId` = d.`planId` 
			WHERE s.`planId` = #{id}
		]]>

	</delete>


	<!-- 增加 学习计划 -->
	<insert id="addStudyPlan" parameterType="StudyPlan">
		<![CDATA[
			INSERT INTO SECIMS.`StudyPlan`(planTitle,planType,planContent,userid,status)
			VALUES(#{planTitle},#{planType},#{planContent},#{userid},#{status});
		]]>
	</insert>


	<update id="updatePlan" parameterType="StudyPlan">

		UPDATE SECIMS.`StudyPlan` t
		<set>
			<if test="planTitle != null">t.`planTitle` = #{planTitle},</if>
			<if test="planContent != null">t.`planContent` = #{planContent},</if>
			<if test="planType != null">t.`planType` = #{planType},</if>
			<if test="status != null">t.`status` = #{status},</if>
		</set>
		, t.`finishTime` = now()
		where t.`planId` = #{planId}

	</update>


	<!-- 查询带 详细学习计划 左连接 -->
	<select id="getPlanWithDetails" resultMap="planWithDetails"
		parameterType="int">
		<![CDATA[
			SELECT * FROM SECIMS.`StudyPlan` s LEFT JOIN SECIMS.`StudyPlanDetail` d
			ON s.`planId` = d.`planId` AND s.`userid` = #{userid}
		]]>
	</select>


	<!-- 查询带 详细学习计划 左连接 根据 planId -->
	<select id="getPlanByPlanIdWithDetails" resultMap="planWithDetails"
		parameterType="int">
		<![CDATA[
			SELECT s.`planId`,
  					s.`planTitle`,
  					s.`planType`,
  					s.`planContent`,
  					s.`userid`,
  					s.`progress`,
  					s.`createTime` AS s_createTime,
  					s.`finishTime` AS s_finishTime,
  					s.`status` AS s_status,
					d.`createTime` AS d_createTime,
  					d.`finishTime` AS d_finishTime,
  					d.`status` AS d_status ,
  					d.`planId`,
  					d.`planDetailId`,
  					d.`planDetailTitle`,
  					d.`planDetailContent` 
			FROM SECIMS.`StudyPlan` s LEFT JOIN SECIMS.`StudyPlanDetail` d
			ON s.`planId` = d.`planId` 
			WHERE s.`planId` = #{planId}
		]]>
	</select>
	
	
	<!--  -->
	<select id="getPlansWithDetailsAndUser" parameterType="int" 
		resultMap="planWithDetailsAndUser">
		<![CDATA[
			SELECT s.`planId`,
  					s.`planTitle`,
  					s.`planType`,
  					s.`planContent`,
  					s.`userid`,
  					s.`progress`,
  					s.`createTime` AS s_createTime,
  					s.`finishTime` AS s_finishTime,
  					s.`status` AS s_status,
					d.`createTime` AS d_createTime,
  					d.`finishTime` AS d_finishTime,
  					d.`status` AS d_status ,
  					d.`planId`,
  					d.`planDetailId`,
  					d.`planDetailTitle`,
  					d.`planDetailContent`,
  					u.* 
			FROM secims.`studyplan` s 
				LEFT JOIN secims.`studyplandetail` d ON s.`planId` = d.`planId` 
				LEFT JOIN secims.`user` u ON s.`userid` = u.`userid` 
			WHERE s.`userid` != #{userid} AND s.`status` = 'F';
		]]>
	</select>


	
	<!-- 修改 计划 状态 -->
	<update id="revisePlanStatus" parameterType="map">
		<![CDATA[
			UPDATE SECIMS.`studyplan` SET status = #{status} , finishTime = NOW() WHERE planId = #{planId}
		]]>
	</update>
	
	
	<!-- 修改 计划 状态/增加 -->
	<update id="addProgress" parameterType="int">
		<![CDATA[
			UPDATE SECIMS.`studyplan` 
				SET progress = (CASE WHEN (progress+(100/7.0)) > 100 THEN 100 ELSE progress+(100/7.0) END ) ,
			 		status = (CASE WHEN progress >= 100 THEN "F" ELSE "E" END),
			 		 finishTime = NOW() 
			 	WHERE planId = #{planId}
		]]>
	</update>
	
	<!-- 修改 计划 状态/减少 -->
	<update id="subProgress" parameterType="int">
		<![CDATA[
			UPDATE SECIMS.`studyplan` 
			SET progress = (CASE WHEN progress < 0 THEN 0 ELSE progress-(100/7.0) END )  
				, finishTime = NOW() 
			WHERE planId = #{planId}
		]]>
	</update>
	
	
	<!--  输出 正在执行的计划数量 -->
	<select id="getPlansNumByUserIdAndStatus" resultType="int" parameterType="map" >
		<![CDATA[
			SELECT COUNT(0) FROM SECIMS.`StudyPlan` P WHERE P.`status` = #{status} and P.userid = #{userid} ;
		]]>
	</select>


	<!--  批量更新 评分/录入成绩 -->
	<update id="updateScores" parameterType="list">
		update SECIMS.`StudyPlan`
		<trim prefix="set" suffixOverrides=",">
			<trim prefix="score = case" suffix="end,">
				<foreach collection="list" item="i" index="index">
					when planId=#{i.planId} then #{i.score}
				</foreach>
			</trim>
		</trim>
		, status = 'T' 
		where planId in
		<foreach collection="list" item="i" open="(" separator="," close=")">
			#{i.planId}
		</foreach>
	</update>
	
	
	



</mapper>